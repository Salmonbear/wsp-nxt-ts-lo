// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sj7u5T6A4j1Xdo61ZkYEWA
// Component: 0SxzEq3X_OB6

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import GlobalHeader2 from "../../GlobalHeader2"; // plasmic-import: DWQ8Kd-IAGYP/component
import Button2 from "../../Button2"; // plasmic-import: QikwW1F-SvOM/component
import Card from "../../Card"; // plasmic-import: 0G-Nrgl3HZEo/component
import Button from "../../Button"; // plasmic-import: Dy4L9PNlqEQ/component
import { AntdAccordion } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { accordionHelpers as AntdAccordion_Helpers } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import { AntdAccordionItem } from "@plasmicpkgs/antd5/skinny/registerCollapse";
import GlobalFooter from "../../GlobalFooter"; // plasmic-import: wRdBAJMlIHx/component

import { useScreenVariants as useScreenVariantszbPet7MzObh } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: zbPET7mzOBH/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sj7u5T6A4j1Xdo61ZkYEWA/projectcss
import sty from "./PlasmicHomepage2.module.css"; // plasmic-import: 0SxzEq3X_OB6/css

import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: RcTLi5Mk7bq/icon
import Icon8Icon from "./icons/PlasmicIcon__Icon8"; // plasmic-import: BvfAcFiGd3i/icon
import Icon7Icon from "./icons/PlasmicIcon__Icon7"; // plasmic-import: bqxbIPzPFDS/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: mDNbn1ZLKrHu/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 5HAw4RHFxpJq/icon

createPlasmicElementProxy;

export type PlasmicHomepage2__VariantMembers = {};
export type PlasmicHomepage2__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage2__VariantsArgs;
export const PlasmicHomepage2__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage2__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage2__ArgsType;
export const PlasmicHomepage2__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage2__OverridesType = {
  root?: Flex__<"div">;
  globalHeader2?: Flex__<typeof GlobalHeader2>;
  hero?: Flex__<"div">;
  h1?: Flex__<"h1">;
  button2?: Flex__<typeof Button2>;
  columns?: Flex__<"div">;
  examples4?: Flex__<"div">;
  examples1?: Flex__<"div">;
  examples2?: Flex__<"div">;
  examples3?: Flex__<"div">;
  callToAction?: Flex__<"div">;
  callToAction3?: Flex__<"div">;
  collapse?: Flex__<typeof AntdAccordion>;
  callToAction2?: Flex__<"div">;
  globalFooter?: Flex__<typeof GlobalFooter>;
};

export interface DefaultHomepage2Props {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage2__RenderFunc(props: {
  variants: PlasmicHomepage2__VariantsArgs;
  args: PlasmicHomepage2__ArgsType;
  overrides: PlasmicHomepage2__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "collapse.activePanelId",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined,

        onMutate: generateOnMutateForSpec(
          "activePanelId",
          AntdAccordion_Helpers
        )
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantszbPet7MzObh()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{PlasmicHomepage2.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage2.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage2.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicHomepage2.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicHomepage2.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicHomepage2.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={PlasmicHomepage2.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={PlasmicHomepage2.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <GlobalHeader2
            data-plasmic-name={"globalHeader2"}
            data-plasmic-override={overrides.globalHeader2}
            className={classNames("__wab_instance", sty.globalHeader2)}
          />

          <Stack__
            as={"div"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__qbWtR)}>
              <div className={classNames(projectcss.all, sty.freeBox__oqFlx)}>
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Turn speech writing "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic", color: "#FF0202" }}
                    >
                      {"stress"}
                    </span>
                    <React.Fragment>{"\ninto"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#000000", fontStyle: "italic" }}
                    >
                      {" "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#008200", fontStyle: "italic" }}
                    >
                      {"success"}
                    </span>
                    <React.Fragment>{", in minutes."}</React.Fragment>
                  </React.Fragment>
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mhN5
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "Get 3 Wedding Speech Drafts AI, \nAI powered ghost writer that uses "
                      }
                    </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic" }}
                    >
                      {"your"}
                    </span>
                    <React.Fragment>{" stories and "}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic" }}
                    >
                      {"your"}
                    </span>
                    <React.Fragment>
                      {" feelings to craft a personal and memorable speech."}
                    </React.Fragment>
                  </React.Fragment>
                </div>
                <Button2
                  data-plasmic-name={"button2"}
                  data-plasmic-override={overrides.button2}
                  className={classNames("__wab_instance", sty.button2)}
                  color={"blue"}
                  link={"app.weddingspeechpro.io"}
                  showEndIcon={true}
                  startIcon={
                    <svg
                      className={classNames(projectcss.all, sty.svg__rraI7)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nHoOt
                    )}
                  >
                    {"Buy Now"}
                  </div>
                </Button2>
              </div>
            </div>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__cGlh)}>
            <div className={classNames(projectcss.all, sty.freeBox__y4U9B)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__obLeM
                )}
              >
                {"No Research Required"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xcXwL
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      "Wedding Speech Pro is an AI powered ghost writer that uses "
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic" }}
                  >
                    {"your"}
                  </span>
                  <React.Fragment>{" stories and "}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic" }}
                  >
                    {"your"}
                  </span>
                  <React.Fragment>
                    {" feelings to craft a personal and memorable speech."}
                  </React.Fragment>
                </React.Fragment>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__ezdjL)}>
                <div
                  data-plasmic-name={"columns"}
                  data-plasmic-override={overrides.columns}
                  className={classNames(projectcss.all, sty.columns)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__tksiJ)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__xjoXu)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mwXnl
                        )}
                      >
                        <Icon6Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___8C7Uh
                          )}
                          role={"img"}
                        />
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__xzv4T
                          )}
                        >
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__s1DDm
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lNcw5
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___161Gh
                          )}
                        >
                          {"Your speech, our expertise"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___548Ky
                          )}
                        >
                          {
                            "Starting a speech can be the hardest part. We provide a clear path to go from initial thoughts to a compelling conclusion"
                          }
                        </div>
                      </Stack__>
                    </Stack__>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column__ehWbB)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__nugcn)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__bwLSu
                        )}
                      >
                        <Icon8Icon
                          className={classNames(projectcss.all, sty.svg__z6Skz)}
                          role={"img"}
                        />
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__t5BmJ
                          )}
                        >
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yLcoG
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___5Zum0
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aoUly
                          )}
                        >
                          {"Speech structure, simplified"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__oyCzO
                          )}
                        >
                          {
                            "Finding the right structure can be challenging. With our help, you'll have a well-organized speech that flows seamlessly, saving you time and effort"
                          }
                        </div>
                      </Stack__>
                    </Stack__>
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.column___2JGkr)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__pVl9G)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__e65Fj
                        )}
                      >
                        <Icon7Icon
                          className={classNames(projectcss.all, sty.svg__mQfqa)}
                          role={"img"}
                        />
                      </div>
                      {false ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___11DC
                          )}
                        >
                          <Icon6Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__puE2
                            )}
                            role={"img"}
                          />
                        </div>
                      ) : null}
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__qQo5B
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__aol4U
                          )}
                        >
                          {"Emotion, Humour, and Grace"}
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__lSTf9
                          )}
                        >
                          {
                            "Whether you want to make them laugh, cry, or both, our AI understands human emotions and crafts speeches that resonate."
                          }
                        </div>
                      </Stack__>
                    </Stack__>
                  </div>
                </div>
              </div>
            </div>
            <div
              data-plasmic-name={"examples4"}
              data-plasmic-override={overrides.examples4}
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.examples4
              )}
              id={"examples"}
            >
              {"Witty, Personal, Heartfelt"}
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__pqBIt
              )}
            >
              <React.Fragment>
                <React.Fragment>
                  {
                    "Wedding Speech Pro is an AI powered ghost writer that uses "
                  }
                </React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"your"}
                </span>
                <React.Fragment>{" stories and "}</React.Fragment>
                <span
                  className={"plasmic_default__all plasmic_default__span"}
                  style={{ fontStyle: "italic" }}
                >
                  {"your"}
                </span>
                <React.Fragment>
                  {" feelings to craft a personal and memorable speech."}
                </React.Fragment>
              </React.Fragment>
            </div>
            <div
              data-plasmic-name={"examples1"}
              data-plasmic-override={overrides.examples1}
              className={classNames(projectcss.all, sty.examples1)}
            >
              <div className={classNames(projectcss.all, sty.column___9DWm)}>
                <Card
                  className={classNames("__wab_instance", sty.card__ngot2)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__qOsy
                      )}
                    >
                      {"Best Man Speech"}
                    </div>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bbRnk
                    )}
                  >
                    {
                      "...we'd both reached for the last chicken wing at the same time. Now, any other man might've just relinquished the wing, but not Alex.\nInstead, he looked me straight in the eye and said, \"How about we split it?\" "
                    }
                  </div>
                </Card>
              </div>
              <div className={classNames(projectcss.all, sty.column__k7ZgV)}>
                <Card
                  className={classNames("__wab_instance", sty.card__vS08H)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__s7B2B
                      )}
                    >
                      {"Excerpt: Maid of Honor Speech"}
                    </div>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jEoxL
                    )}
                  >
                    {
                      "The first time I saw them together, after she'd had another one of her bright ideas, and Jeremy just smiled and said, \u201cOkay, but how about this...\u201d, I knew he was the one. He grounds her, complements her, and embraces every quirky, out-of-the-box facet of her personality."
                    }
                  </div>
                </Card>
              </div>
              <div className={classNames(projectcss.all, sty.column__lPdYg)}>
                <Card
                  className={classNames("__wab_instance", sty.card__on1Cc)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__n3PgP
                      )}
                    >
                      {"Excerpt: Maid of Honor Speech for Amanda"}
                    </div>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__m0Rmv
                    )}
                  >
                    {
                      "Good evening ladies and gents! For those who don't recognize me after my bridal makeover - no I'm not Jennifer Aniston, I'm still plain old Jessie..."
                    }
                  </div>
                </Card>
              </div>
            </div>
            <div
              data-plasmic-name={"examples2"}
              data-plasmic-override={overrides.examples2}
              className={classNames(projectcss.all, sty.examples2)}
            >
              <div className={classNames(projectcss.all, sty.column__nNKh)}>
                <Card
                  className={classNames("__wab_instance", sty.card__e9JeL)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fOgjC
                      )}
                    >
                      {"Excerpt: Best Man Speech"}
                    </div>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zg3Fg
                    )}
                  >
                    {
                      "Last time I waited for John, I came with a flip phone. When he texted 'Just parked! Where you at?', I replied using voice commands on my smartwatch..."
                    }
                  </div>
                </Card>
              </div>
              <div className={classNames(projectcss.all, sty.column__eCzm)}>
                <Card
                  className={classNames("__wab_instance", sty.card__j2EQx)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___524H5
                      )}
                    >
                      {"Excerpt: Best Man Speech"}
                    </div>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hkxC
                    )}
                  >
                    {
                      "Our buddy Rohan lives in his own time zone - let's call it the Johnston Standard Time Zone. He operates on a schedule so loose, even jellyfish have more structure in their routines"
                    }
                  </div>
                </Card>
              </div>
              <div className={classNames(projectcss.all, sty.column__osb0Y)}>
                <Card
                  className={classNames("__wab_instance", sty.card__s1KI5)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___3MM9T
                      )}
                    >
                      {"Excerpt: Best Man Speech"}
                    </div>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__cYckp
                    )}
                  >
                    {
                      "\"Now, let's discuss Mehmet's cooking skills, or the lack thereof. Remember when he attempted to make spaghetti for the first time? He thought 'al dente' was an Italian chef and that pasta sauce was supposed to be a solid. But hey, he served it with pride."
                    }
                  </div>
                </Card>
              </div>
            </div>
            <div
              data-plasmic-name={"examples3"}
              data-plasmic-override={overrides.examples3}
              className={classNames(projectcss.all, sty.examples3)}
            >
              <div className={classNames(projectcss.all, sty.column__nh0Pu)}>
                <Card
                  className={classNames("__wab_instance", sty.card__qWuj9)}
                  title={"Excerpt: Maid of Honor Speech"}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__e2JD
                    )}
                  >
                    {
                      "The first time I saw them together, after she'd had another one of her bright ideas, and Jeremy just smiled and said, \u201cOkay, but how about this...\u201d, I knew he was the one. He grounds her, complements her, and embraces every quirky, out-of-the-box facet of her personality."
                    }
                  </div>
                </Card>
              </div>
              <div className={classNames(projectcss.all, sty.column__q37CO)}>
                <Card
                  className={classNames("__wab_instance", sty.card__uyWxs)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__l8YZs
                      )}
                    >
                      {"Excerpt: "}
                    </div>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__v8Q1X
                    )}
                  >
                    {
                      "Every story, every memory, speaks to who Antonio truly is. Generous, adaptable, and the glue that binds us all. And with Gloria by his side, I can only imagine the new adventures and stories waiting for them. "
                    }
                  </div>
                </Card>
              </div>
              <div className={classNames(projectcss.all, sty.column___1EQvN)}>
                <Card
                  className={classNames("__wab_instance", sty.card__oiWkn)}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__jmd2D
                      )}
                    >
                      {"Excerpt: Best Man Speech for Mehmet"}
                    </div>
                  }
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__evJqV
                    )}
                  >
                    {
                      "\"Now, let's discuss Mehmet's cooking skills, or the lack thereof. Remember when he attempted to make spaghetti for the first time? He thought 'al dente' was an Italian chef and that pasta sauce was supposed to be a solid. But hey, he served it with pride."
                    }
                  </div>
                </Card>
              </div>
            </div>
          </div>
          <Stack__
            as={"div"}
            data-plasmic-name={"callToAction"}
            data-plasmic-override={overrides.callToAction}
            hasGap={true}
            className={classNames(projectcss.all, sty.callToAction)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__cCmf)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ocapq
                )}
              >
                {"How does it work?"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__omnWg
                )}
              >
                {
                  "Embrace the celebration, speak from the heart, and let us take care of the words"
                }
              </div>
              <Button
                className={classNames("__wab_instance", sty.button__kZ1Le)}
                endIcon={
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg__mxdv3)}
                    role={"img"}
                  />
                }
                link={"https://app.weddingspeechpro.io"}
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__gfp0O)}
                    role={"img"}
                  />
                }
                submitsForm={false}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___8YQoD
                  )}
                >
                  {"Start now ->"}
                </div>
              </Button>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__cXycv)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___6SWv6
                )}
              >
                {
                  "No research required. \n Reading blog posts,  saving generic templates and copying basic speeches examples.\n \nGet quality, tailored speeches, fast."
                }
              </div>
            </div>
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"callToAction3"}
            data-plasmic-override={overrides.callToAction3}
            hasGap={true}
            className={classNames(projectcss.all, sty.callToAction3)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ztEGz)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__x5Vj
                )}
              >
                {"Frequently Asked Questions"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__y0QgS
                )}
              >
                {
                  "Embrace the celebration, speak from the heart, and let us take care of the words"
                }
              </div>
            </Stack__>
            {(() => {
              const child$Props = {
                activeKey: generateStateValueProp($state, [
                  "collapse",
                  "activePanelId"
                ]),
                bordered: true,
                className: classNames("__wab_instance", sty.collapse),
                items: (
                  <React.Fragment>
                    <AntdAccordionItem
                      className={classNames(
                        "__wab_instance",
                        sty.accordionItem__byp20
                      )}
                      collapsible={true}
                      id={`1${undefined}`}
                      label={
                        "Doesn't an AI-generated speech lack the genuine personal touch and emotion of human writing?"
                      }
                      showArrow={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iXAd
                        )}
                      >
                        {"First Children"}
                      </div>
                    </AntdAccordionItem>
                    <AntdAccordionItem
                      className={classNames(
                        "__wab_instance",
                        sty.accordionItem__jRxFz
                      )}
                      id={2}
                      label={"Second Item"}
                      showArrow={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__sAebz
                        )}
                      >
                        {"Second Children"}
                      </div>
                    </AntdAccordionItem>
                  </React.Fragment>
                ),
                onChange: generateStateOnChangePropForCodeComponents(
                  $state,
                  "activePanelId",
                  ["collapse", "activePanelId"],
                  AntdAccordion_Helpers
                )
              };
              initializeCodeComponentStates(
                $state,
                [
                  {
                    name: "activePanelId",
                    plasmicStateName: "collapse.activePanelId"
                  }
                ],
                [],
                AntdAccordion_Helpers ?? {},
                child$Props
              );

              return (
                <AntdAccordion
                  data-plasmic-name={"collapse"}
                  data-plasmic-override={overrides.collapse}
                  {...child$Props}
                />
              );
            })()}
          </Stack__>
          <Stack__
            as={"div"}
            data-plasmic-name={"callToAction2"}
            data-plasmic-override={overrides.callToAction2}
            hasGap={true}
            className={classNames(projectcss.all, sty.callToAction2)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__sL4R4)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fck8X
                )}
              >
                {"Ready to Beat Writer's Block?"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__g4Nor
                )}
              >
                {
                  "Embrace the celebration, speak from the heart, and let us take care of the words"
                }
              </div>
              <Button
                className={classNames("__wab_instance", sty.button__xl2Qf)}
                endIcon={
                  <IconIcon
                    className={classNames(projectcss.all, sty.svg__hbmN)}
                    role={"img"}
                  />
                }
                link={"https://app.weddingspeechpro.io"}
                startIcon={
                  <ChecksvgIcon
                    className={classNames(projectcss.all, sty.svg__ymShf)}
                    role={"img"}
                  />
                }
                submitsForm={false}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__lIp8M
                  )}
                >
                  {"Start now ->"}
                </div>
              </Button>
            </Stack__>
          </Stack__>
          <GlobalFooter
            data-plasmic-name={"globalFooter"}
            data-plasmic-override={overrides.globalFooter}
            className={classNames("__wab_instance", sty.globalFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "globalHeader2",
    "hero",
    "h1",
    "button2",
    "columns",
    "examples4",
    "examples1",
    "examples2",
    "examples3",
    "callToAction",
    "callToAction3",
    "collapse",
    "callToAction2",
    "globalFooter"
  ],
  globalHeader2: ["globalHeader2"],
  hero: ["hero", "h1", "button2"],
  h1: ["h1"],
  button2: ["button2"],
  columns: ["columns"],
  examples4: ["examples4"],
  examples1: ["examples1"],
  examples2: ["examples2"],
  examples3: ["examples3"],
  callToAction: ["callToAction"],
  callToAction3: ["callToAction3", "collapse"],
  collapse: ["collapse"],
  callToAction2: ["callToAction2"],
  globalFooter: ["globalFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  globalHeader2: typeof GlobalHeader2;
  hero: "div";
  h1: "h1";
  button2: typeof Button2;
  columns: "div";
  examples4: "div";
  examples1: "div";
  examples2: "div";
  examples3: "div";
  callToAction: "div";
  callToAction3: "div";
  collapse: typeof AntdAccordion;
  callToAction2: "div";
  globalFooter: typeof GlobalFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage2__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage2__VariantsArgs;
    args?: PlasmicHomepage2__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage2__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicHomepage2__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage2__ArgProps,
          internalVariantPropNames: PlasmicHomepage2__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage2";
  } else {
    func.displayName = `PlasmicHomepage2.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage2 = Object.assign(
  // Top-level PlasmicHomepage2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    globalHeader2: makeNodeComponent("globalHeader2"),
    hero: makeNodeComponent("hero"),
    h1: makeNodeComponent("h1"),
    button2: makeNodeComponent("button2"),
    columns: makeNodeComponent("columns"),
    examples4: makeNodeComponent("examples4"),
    examples1: makeNodeComponent("examples1"),
    examples2: makeNodeComponent("examples2"),
    examples3: makeNodeComponent("examples3"),
    callToAction: makeNodeComponent("callToAction"),
    callToAction3: makeNodeComponent("callToAction3"),
    collapse: makeNodeComponent("collapse"),
    callToAction2: makeNodeComponent("callToAction2"),
    globalFooter: makeNodeComponent("globalFooter"),

    // Metadata about props expected for PlasmicHomepage2
    internalVariantProps: PlasmicHomepage2__VariantProps,
    internalArgProps: PlasmicHomepage2__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Wedding Speech Pro | From stress to success in minutes",
      description:
        "Craft heartfelt, witty wedding speeches effortlessly with AI assistance - no research required!",
      ogImageSrc:
        "https://site-assets.plasmic.app/73feca6d98991cc655ec7408f5cfaaf3.png",
      canonical: ""
    }
  }
);

export default PlasmicHomepage2;
/* prettier-ignore-end */
