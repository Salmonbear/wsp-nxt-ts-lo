// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: sj7u5T6A4j1Xdo61ZkYEWA
// Component: R_dQ1sp0VB5t

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";

import GlobalHeader2 from "../../GlobalHeader2"; // plasmic-import: DWQ8Kd-IAGYP/component
import TextInput from "../../TextInput"; // plasmic-import: TS3ZiMBhGoq/component
import Select from "../../Select"; // plasmic-import: DmSimEG8ZzUb/component
import Button from "../../Button"; // plasmic-import: Dy4L9PNlqEQ/component
import { AntdButton } from "@plasmicpkgs/antd5/skinny/registerButton";
import { DataFetcher } from "@plasmicpkgs/plasmic-query";
import { AntdModal } from "@plasmicpkgs/antd5/skinny/registerModal";
import { LottieWrapper } from "@plasmicpkgs/lottie-react";
import SocialProof from "../../SocialProof"; // plasmic-import: dkzgHhlBBoah/component
import GlobalFooter from "../../GlobalFooter"; // plasmic-import: wRdBAJMlIHx/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: sj7u5T6A4j1Xdo61ZkYEWA/projectcss
import sty from "./Plasmic_2QuoteFinder.module.css"; // plasmic-import: R_dQ1sp0VB5t/css

import SearchsvgIcon from "./icons/PlasmicIcon__Searchsvg"; // plasmic-import: _tvFNaCN1Yz7/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: mDNbn1ZLKrHu/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 5HAw4RHFxpJq/icon

createPlasmicElementProxy;

export type Plasmic_2QuoteFinder__VariantMembers = {};
export type Plasmic_2QuoteFinder__VariantsArgs = {};
type VariantPropType = keyof Plasmic_2QuoteFinder__VariantsArgs;
export const Plasmic_2QuoteFinder__VariantProps = new Array<VariantPropType>();

export type Plasmic_2QuoteFinder__ArgsType = {
  children?: React.ReactNode;
};
type ArgPropType = keyof Plasmic_2QuoteFinder__ArgsType;
export const Plasmic_2QuoteFinder__ArgProps = new Array<ArgPropType>(
  "children"
);

export type Plasmic_2QuoteFinder__OverridesType = {
  root?: Flex__<"div">;
  globalHeader2?: Flex__<typeof GlobalHeader2>;
  section?: Flex__<"section">;
  quoteRequestInput?: Flex__<typeof TextInput>;
  speechTypeInput?: Flex__<typeof Select>;
  books?: Flex__<"div">;
  _public?: Flex__<"div">;
  publicFigures?: Flex__<"div">;
  proverbs?: Flex__<"div">;
  movies?: Flex__<"div">;
  quoteSection?: Flex__<"section">;
  quoteApi?: Flex__<typeof DataFetcher>;
  modal?: Flex__<typeof AntdModal>;
  lottie?: Flex__<typeof LottieWrapper>;
  quotes?: Flex__<"div">;
  upSell?: Flex__<"section">;
  submitEmailInput?: Flex__<typeof TextInput>;
  preFooter?: Flex__<"section">;
  preFooter2?: Flex__<"section">;
  globalFooter?: Flex__<typeof GlobalFooter>;
};

export interface Default_2QuoteFinderProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function Plasmic_2QuoteFinder__RenderFunc(props: {
  variants: Plasmic_2QuoteFinder__VariantsArgs;
  args: Plasmic_2QuoteFinder__ArgsType;
  overrides: Plasmic_2QuoteFinder__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  const stateSpecs: Parameters<typeof useDollarState>[0] = React.useMemo(
    () => [
      {
        path: "quoteRequestInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "quoteRequest",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "speechTypeInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => undefined
      },
      {
        path: "modal.open",
        type: "private",
        variableType: "boolean",
        initFunc: ({ $props, $state, $queries, $ctx }) => true
      },
      {
        path: "emailSignUp",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ""
      },
      {
        path: "submitEmailInput.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      }
    ],
    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const dataSourcesCtx = usePlasmicDataSourceContext();
  const plasmicInvalidate = usePlasmicInvalidate();

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary_large_image" />
        <title key="title">{Plasmic_2QuoteFinder.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={Plasmic_2QuoteFinder.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={Plasmic_2QuoteFinder.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={Plasmic_2QuoteFinder.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={Plasmic_2QuoteFinder.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={Plasmic_2QuoteFinder.pageMetadata.description}
        />
        <meta
          key="og:image"
          property="og:image"
          content={Plasmic_2QuoteFinder.pageMetadata.ogImageSrc}
        />
        <meta
          key="twitter:image"
          name="twitter:image"
          content={Plasmic_2QuoteFinder.pageMetadata.ogImageSrc}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.root
          )}
        >
          <GlobalHeader2
            data-plasmic-name={"globalHeader2"}
            data-plasmic-override={overrides.globalHeader2}
            className={classNames("__wab_instance", sty.globalHeader2)}
          />

          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__rKab)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__okASd
                )}
              >
                <React.Fragment>
                  <React.Fragment>{""}</React.Fragment>
                  {
                    <span
                      className={classNames(
                        projectcss.all,
                        projectcss.span,
                        projectcss.__wab_text,
                        projectcss.plasmic_default__inline,
                        sty.span__urlWz
                      )}
                    >
                      {"Speech Toolkit"}
                    </span>
                  }
                  <React.Fragment>{"\nQuote Finder"}</React.Fragment>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jsBOz
                )}
              >
                <React.Fragment>
                  <React.Fragment>
                    {
                      "Struggling to find the right words? Tired of endless quote lists?\nFind the quotes you need "
                    }
                  </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic" }}
                  >
                    {"and"}
                  </span>
                  <React.Fragment>{" how best to use them. "}</React.Fragment>
                </React.Fragment>
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__aAwuA)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__z9HFu
                )}
              >
                {"Find the best quotes about..."}
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__h1Xiw)}
              >
                <TextInput
                  data-plasmic-name={"quoteRequestInput"}
                  data-plasmic-override={overrides.quoteRequestInput}
                  className={classNames(
                    "__wab_instance",
                    sty.quoteRequestInput
                  )}
                  onChange={(...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "quoteRequestInput",
                      "value"
                    ])((e => e.target?.value).apply(null, eventArgs));
                  }}
                  placeholder={"e.g. finding love"}
                  value={
                    generateStateValueProp($state, [
                      "quoteRequestInput",
                      "value"
                    ]) ?? ""
                  }
                />

                <Select
                  data-plasmic-name={"speechTypeInput"}
                  data-plasmic-override={overrides.speechTypeInput}
                  className={classNames("__wab_instance", sty.speechTypeInput)}
                  name={"Speech Type"}
                  onChange={(...eventArgs) => {
                    generateStateOnChangeProp($state, [
                      "speechTypeInput",
                      "value"
                    ])(eventArgs[0]);
                  }}
                  options={(() => {
                    const __composite = [
                      { value: null, label: null },
                      { value: null, label: null },
                      { value: null, label: null },
                      { value: null }
                    ];
                    __composite["0"]["value"] = "Best Man Speech";
                    __composite["0"]["label"] = "Best Man Speech";
                    __composite["1"]["value"] = "Maid of Honor Speech";
                    __composite["1"]["label"] = "Maid of Honor Speech";
                    __composite["2"]["value"] = "Parent of the Bride Speech";
                    __composite["2"]["label"] = "Parent of the Bride Speech";
                    __composite["3"]["value"] = "Parent of the Groom Speech";
                    return __composite;
                  })()}
                  placeholder={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hdY4R
                      )}
                    >
                      {"for my.... "}
                    </div>
                  }
                  value={generateStateValueProp($state, [
                    "speechTypeInput",
                    "value"
                  ])}
                />
              </Stack__>
              <Button
                className={classNames("__wab_instance", sty.button__tjAbo)}
                color={"yellow"}
                link={(() => {
                  try {
                    return undefined;
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return `/speech-wizard`;
                    }
                    throw e;
                  }
                })()}
                onClick={async event => {
                  const $steps = {};

                  $steps["updateVariable"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["quoteRequest"]
                          },
                          operation: 0,
                          value:
                            $state.quoteRequestInput.value +
                            " for my " +
                            $state.speechTypeInput.value
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateVariable"] != null &&
                    typeof $steps["updateVariable"] === "object" &&
                    typeof $steps["updateVariable"].then === "function"
                  ) {
                    $steps["updateVariable"] = await $steps["updateVariable"];
                  }
                }}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__f2LRr
                  )}
                >
                  {"Find Quotes"}
                </div>
              </Button>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns__hnKcg)}
              >
                <div
                  data-plasmic-name={"books"}
                  data-plasmic-override={overrides.books}
                  className={classNames(projectcss.all, sty.books)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__tWEdy)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__gOsO)}
                    >
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__g5WeN)}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__f2RZr)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__m4D6M
                        )}
                      >
                        {"Books"}
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"_public"}
                  data-plasmic-override={overrides._public}
                  className={classNames(projectcss.all, sty._public)}
                >
                  <div
                    data-plasmic-name={"publicFigures"}
                    data-plasmic-override={overrides.publicFigures}
                    className={classNames(projectcss.all, sty.publicFigures)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__fqIKp)}
                    >
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__lzZsv)}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__iu0KP)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___7L9Bp
                        )}
                      >
                        {"Public Figures"}
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"proverbs"}
                  data-plasmic-override={overrides.proverbs}
                  className={classNames(projectcss.all, sty.proverbs)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__pXlo)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__zSdrp)}
                    >
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__x10Ub)}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__lEmQ2)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__veGnj
                        )}
                      >
                        {"Proverbs"}
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  data-plasmic-name={"movies"}
                  data-plasmic-override={overrides.movies}
                  className={classNames(projectcss.all, sty.movies)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__rpKhi)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column__zhrUh)}
                    >
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__sSu4Y)}
                        role={"img"}
                      />
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__uiLg7)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__rdTbF
                        )}
                      >
                        {"Movies"}
                      </div>
                    </div>
                  </div>
                </div>
              </Stack__>
              <AntdButton
                className={classNames("__wab_instance", sty.button__nsmmw)}
                danger={false}
                disabled={false}
                loading={false}
                onClick={async () => {
                  const $steps = {};

                  $steps["updateQuoteRequest"] = true
                    ? (() => {
                        const actionArgs = {
                          variable: {
                            objRoot: $state,
                            variablePath: ["quoteRequest"]
                          },
                          operation: 0,
                          value:
                            $state.quoteRequestInput.value +
                            " for my " +
                            $state.speechTypeInput.value
                        };
                        return (({
                          variable,
                          value,
                          startIndex,
                          deleteCount
                        }) => {
                          if (!variable) {
                            return;
                          }
                          const { objRoot, variablePath } = variable;

                          $stateSet(objRoot, variablePath, value);
                          return value;
                        })?.apply(null, [actionArgs]);
                      })()
                    : undefined;
                  if (
                    $steps["updateQuoteRequest"] != null &&
                    typeof $steps["updateQuoteRequest"] === "object" &&
                    typeof $steps["updateQuoteRequest"].then === "function"
                  ) {
                    $steps["updateQuoteRequest"] = await $steps[
                      "updateQuoteRequest"
                    ];
                  }
                }}
                size={"medium"}
                type={"default"}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__nv0EM
                  )}
                >
                  {"Find Quotes"}
                </div>
              </AntdButton>
            </div>
          </section>
          <section
            data-plasmic-name={"quoteSection"}
            data-plasmic-override={overrides.quoteSection}
            className={classNames(projectcss.all, sty.quoteSection)}
          >
            {(() => {
              try {
                return $state.quoteRequest !== "";
              } catch (e) {
                if (
                  e instanceof TypeError ||
                  e?.plasmicType === "PlasmicUndefinedDataError"
                ) {
                  return true;
                }
                throw e;
              }
            })() ? (
              <DataFetcher
                data-plasmic-name={"quoteApi"}
                data-plasmic-override={overrides.quoteApi}
                className={classNames("__wab_instance", sty.quoteApi)}
                dataName={"bubbleRequestAPI"}
                errorDisplay={
                  <DataCtxReader__>
                    {$ctx => "Error fetching data"}
                  </DataCtxReader__>
                }
                errorName={"fetchError"}
                headers={{
                  "Content-Type": "application/json",
                  Accept: "application/json",
                  Authorization: "Bearer 4bd256429670934e855b7aa2fb1ff5fc"
                }}
                loadingDisplay={
                  <DataCtxReader__>
                    {$ctx => (
                      <AntdModal
                        data-plasmic-name={"modal"}
                        data-plasmic-override={overrides.modal}
                        className={classNames("__wab_instance", sty.modal)}
                        defaultStylesClassName={classNames(
                          projectcss.root_reset,
                          projectcss.plasmic_default_styles,
                          projectcss.plasmic_mixins,
                          projectcss.plasmic_tokens,
                          plasmic_antd_5_hostless_css.plasmic_tokens,
                          plasmic_plasmic_rich_components_css.plasmic_tokens
                        )}
                        hideFooter={true}
                        maskClosable={false}
                        modalScopeClassName={sty["modal__modal"]}
                        onOpenChange={generateStateOnChangeProp($state, [
                          "modal",
                          "open"
                        ])}
                        open={generateStateValueProp($state, ["modal", "open"])}
                        title={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__sjcy6
                            )}
                          >
                            {"Finding the best quotes..."}
                          </div>
                        }
                        trigger={null}
                        wrapClassName={classNames({
                          [sty["pcls_tI_fggqx0mFu"]]: true
                        })}
                      >
                        <LottieWrapper
                          data-plasmic-name={"lottie"}
                          data-plasmic-override={overrides.lottie}
                          animationData={{
                            nm: "Comp 1",
                            mn: "",
                            layers: [
                              {
                                ty: 4,
                                nm: "heart2 Outlines",
                                mn: "",
                                sr: 1,
                                st: 0,
                                op: 900.000036657751,
                                ip: 0,
                                hd: false,
                                cl: "",
                                ln: "",
                                ddd: 0,
                                bm: 0,
                                hasMask: false,
                                ao: 0,
                                ks: {
                                  a: { a: 0, k: [250, 250, 0], ix: 1 },
                                  s: {
                                    a: 0,
                                    k: [153.22, -154.334, 100],
                                    ix: 6
                                  },
                                  sk: { a: 0, k: 0 },
                                  p: { a: 0, k: [1076, 610, 0], ix: 2 },
                                  r: { a: 0, k: 217.976, ix: 10 },
                                  sa: { a: 0, k: 0 },
                                  o: { a: 0, k: 100, ix: 11 }
                                },
                                ef: [],
                                shapes: [
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 1",
                                    ix: 1,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: false,
                                            i: [
                                              [0, 0],
                                              [0, 97.092],
                                              [49.706, 0],
                                              [12.516, -34.657],
                                              [0, 0],
                                              [-17.316, 2.433],
                                              [7.524, 11.837],
                                              [35.691, 0],
                                              [0, -49.703],
                                              [0, 0]
                                            ],
                                            o: [
                                              [48.325, -31.215],
                                              [0, -49.703],
                                              [-38.968, 0],
                                              [0, 0],
                                              [-20.118, 20.617],
                                              [22.473, -3.158],
                                              [-14.548, -30.117],
                                              [-49.7, 0],
                                              [0, 127.53],
                                              [0, 0]
                                            ],
                                            v: [
                                              [25.096, 140.103],
                                              [174.656, -65.181],
                                              [84.662, -155.177],
                                              [-0.004, -95.747],
                                              [-0.75, -99.637],
                                              [-0.004, -56.702],
                                              [-3.595, -104.284],
                                              [-84.663, -155.177],
                                              [-174.657, -65.181],
                                              [-0.004, 155.177]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "st",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Stroke",
                                        nm: "Stroke 1",
                                        lc: 2,
                                        lj: 2,
                                        ml: 1,
                                        o: { a: 0, k: 100, ix: 4 },
                                        w: { a: 0, k: 5, ix: 5 },
                                        d: [],
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 3
                                        }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [250.25, 242.178],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "tm",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Filter - Trim",
                                    nm: "Trim Paths 1",
                                    ix: 2,
                                    e: { a: 0, k: 100, ix: 2 },
                                    o: { a: 0, k: 0, ix: 3 },
                                    s: {
                                      a: 1,
                                      k: [
                                        {
                                          o: { x: 0.167, y: 0.167 },
                                          i: { x: 0.833, y: 0.833 },
                                          s: [100],
                                          t: 0
                                        },
                                        {
                                          o: { x: 0.167, y: 0.167 },
                                          i: { x: 0.833, y: 0.833 },
                                          s: [0],
                                          t: 120.0000048877
                                        }
                                      ],
                                      ix: 1
                                    },
                                    m: 1
                                  }
                                ],
                                ind: 1
                              },
                              {
                                ty: 4,
                                nm: "\u00e5\u009c\u0096\u00e5\u00b1\u00a4 1/heartballoon Outlines",
                                mn: "",
                                sr: 1,
                                st: 0,
                                op: 900.000036657751,
                                ip: 0,
                                hd: false,
                                cl: "",
                                ln: "",
                                ddd: 0,
                                bm: 0,
                                hasMask: false,
                                ao: 0,
                                ks: {
                                  a: { a: 0, k: [159, 144, 0], ix: 1 },
                                  s: { a: 0, k: [47.17, 44.444, 100], ix: 6 },
                                  sk: { a: 0, k: 0 },
                                  p: {
                                    a: 1,
                                    k: [
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [1672, 1314, 0],
                                        t: 0,
                                        ti: [38, 100.833, 0],
                                        to: [0, -72.833, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [1672, 877, 0],
                                        t: 31,
                                        ti: [9.667, 61.333, 0],
                                        to: [-38, -100.833, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [1444, 709, 0],
                                        t: 51,
                                        ti: [-67.667, 136.333, 0],
                                        to: [-9.667, -61.333, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [1614, 509, 0],
                                        t: 75,
                                        ti: [-39.333, 103, 0],
                                        to: [67.667, -136.333, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [1850, -109, 0],
                                        t: 120.0000048877
                                      }
                                    ],
                                    ix: 2
                                  },
                                  r: {
                                    a: 1,
                                    k: [
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [0],
                                        t: 0
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [-57.254],
                                        t: 51
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [49.501],
                                        t: 60
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [30.99],
                                        t: 75
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [22.068],
                                        t: 121.000004928431
                                      }
                                    ],
                                    ix: 10
                                  },
                                  sa: { a: 0, k: 0 },
                                  o: { a: 0, k: 100, ix: 11 }
                                },
                                ef: [],
                                shapes: [
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 1",
                                    ix: 1,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [1.407, -7.146],
                                              [7.146, 1.408],
                                              [-1.407, 7.146],
                                              [-7.146, -1.408]
                                            ],
                                            o: [
                                              [-1.408, 7.147],
                                              [-7.148, -1.407],
                                              [1.407, -7.147],
                                              [7.148, 1.407]
                                            ],
                                            v: [
                                              [12.941, 2.548],
                                              [-2.547, 12.94],
                                              [-12.94, -2.548],
                                              [2.548, -12.94]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [270.922, 120.561],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 2",
                                    ix: 2,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [-21.52, -18.837],
                                              [22.352, 4.881],
                                              [19.235, 17.415],
                                              [3.96, 15.459]
                                            ],
                                            o: [
                                              [21.309, 18.652],
                                              [-21.11, -4.608],
                                              [-19.234, -17.413],
                                              [-6.439, -25.134]
                                            ],
                                            v: [
                                              [23.574, -24.7],
                                              [26.87, 41.658],
                                              [4.768, -3.928],
                                              [-42.783, -21.404]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [252.801, 59.847],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 3",
                                    ix: 3,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [4.045, 0],
                                              [0, 0],
                                              [0, 4.045],
                                              [-4.045, 0],
                                              [0, 0],
                                              [0, -4.044]
                                            ],
                                            o: [
                                              [0, 0],
                                              [-4.045, 0],
                                              [0, -4.044],
                                              [0, 0],
                                              [4.045, 0],
                                              [0, 4.045]
                                            ],
                                            v: [
                                              [11.74, 7.323],
                                              [-11.74, 7.323],
                                              [-19.063, 0],
                                              [-11.74, -7.323],
                                              [11.74, -7.323],
                                              [19.063, 0]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [158.597, 279.995],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 4",
                                    ix: 4,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [48.352, 0],
                                              [15.918, -21.855],
                                              [29.107, 0],
                                              [0, -48.352],
                                              [0, 0],
                                              [0, 73.567]
                                            ],
                                            o: [
                                              [-29.107, 0],
                                              [-15.918, -21.855],
                                              [-48.352, 0],
                                              [0, 73.567],
                                              [0, 0],
                                              [0, -48.352]
                                            ],
                                            v: [
                                              [70.799, -139.872],
                                              [-0.001, -103.801],
                                              [-70.8, -139.872],
                                              [-158.348, -52.323],
                                              [-0.001, 139.872],
                                              [158.348, -52.323]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [158.598, 140.122],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  }
                                ],
                                ind: 2
                              },
                              {
                                ty: 4,
                                nm: "\u00e5\u009c\u0096\u00e5\u00b1\u00a4 1/heartballoon Outlines",
                                mn: "",
                                sr: 1,
                                st: 0,
                                op: 900.000036657751,
                                ip: 0,
                                hd: false,
                                cl: "",
                                ln: "",
                                ddd: 0,
                                bm: 0,
                                hasMask: false,
                                ao: 0,
                                ks: {
                                  a: { a: 0, k: [159, 144, 0], ix: 1 },
                                  s: { a: 0, k: [47.17, 44.444, 100], ix: 6 },
                                  sk: { a: 0, k: 0 },
                                  p: {
                                    a: 1,
                                    k: [
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [164, 1190, 0],
                                        t: 25,
                                        ti: [-40.667, 64.667, 0],
                                        to: [52.667, -48, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [480, 902, 0],
                                        t: 46,
                                        ti: [36.667, 41.667, 0],
                                        to: [40.667, -64.667, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [408, 802, 0],
                                        t: 64,
                                        ti: [12, 49.333, 0],
                                        to: [-36.667, -41.667, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [260, 652, 0],
                                        t: 86,
                                        ti: [-21.667, 31.333, 0],
                                        to: [-12, -49.333, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [336, 505.99999999999994, 0],
                                        t: 92,
                                        ti: [-8.667, 98.667, 0],
                                        to: [21.667, -31.333, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [390, 463.99999999999994, 0],
                                        t: 110,
                                        ti: [0.333, 91.667, 0],
                                        to: [8.667, -98.667, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [388, -86, 0],
                                        t: 143.000005824509
                                      }
                                    ],
                                    ix: 2
                                  },
                                  r: {
                                    a: 1,
                                    k: [
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [0],
                                        t: 25
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [42.423],
                                        t: 46
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [-50.068],
                                        t: 64
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [30.745],
                                        t: 92
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [-6.172],
                                        t: 110.000004480392
                                      }
                                    ],
                                    ix: 10
                                  },
                                  sa: { a: 0, k: 0 },
                                  o: { a: 0, k: 100, ix: 11 }
                                },
                                ef: [],
                                shapes: [
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 1",
                                    ix: 1,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [1.407, -7.146],
                                              [7.146, 1.408],
                                              [-1.407, 7.146],
                                              [-7.146, -1.408]
                                            ],
                                            o: [
                                              [-1.408, 7.147],
                                              [-7.148, -1.407],
                                              [1.407, -7.147],
                                              [7.148, 1.407]
                                            ],
                                            v: [
                                              [12.941, 2.548],
                                              [-2.547, 12.94],
                                              [-12.94, -2.548],
                                              [2.548, -12.94]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [270.922, 120.561],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 2",
                                    ix: 2,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [-21.52, -18.837],
                                              [22.352, 4.881],
                                              [19.235, 17.415],
                                              [3.96, 15.459]
                                            ],
                                            o: [
                                              [21.309, 18.652],
                                              [-21.11, -4.608],
                                              [-19.234, -17.413],
                                              [-6.439, -25.134]
                                            ],
                                            v: [
                                              [23.574, -24.7],
                                              [26.87, 41.658],
                                              [4.768, -3.928],
                                              [-42.783, -21.404]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [252.801, 59.847],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 3",
                                    ix: 3,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [4.045, 0],
                                              [0, 0],
                                              [0, 4.045],
                                              [-4.045, 0],
                                              [0, 0],
                                              [0, -4.044]
                                            ],
                                            o: [
                                              [0, 0],
                                              [-4.045, 0],
                                              [0, -4.044],
                                              [0, 0],
                                              [4.045, 0],
                                              [0, 4.045]
                                            ],
                                            v: [
                                              [11.74, 7.323],
                                              [-11.74, 7.323],
                                              [-19.063, 0],
                                              [-11.74, -7.323],
                                              [11.74, -7.323],
                                              [19.063, 0]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [158.597, 279.995],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 4",
                                    ix: 4,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [48.352, 0],
                                              [15.918, -21.855],
                                              [29.107, 0],
                                              [0, -48.352],
                                              [0, 0],
                                              [0, 73.567]
                                            ],
                                            o: [
                                              [-29.107, 0],
                                              [-15.918, -21.855],
                                              [-48.352, 0],
                                              [0, 73.567],
                                              [0, 0],
                                              [0, -48.352]
                                            ],
                                            v: [
                                              [70.799, -139.872],
                                              [-0.001, -103.801],
                                              [-70.8, -139.872],
                                              [-158.348, -52.323],
                                              [-0.001, 139.872],
                                              [158.348, -52.323]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [158.598, 140.122],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "tm",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Filter - Trim",
                                    nm: "Trim Paths 1",
                                    ix: 5,
                                    e: { a: 0, k: 100, ix: 2 },
                                    o: { a: 0, k: 0, ix: 3 },
                                    s: {
                                      a: 1,
                                      k: [
                                        {
                                          o: { x: 0.167, y: 0.167 },
                                          i: { x: 0.833, y: 0.833 },
                                          s: [0],
                                          t: 54
                                        },
                                        {
                                          o: { x: 0.167, y: 0.167 },
                                          i: { x: 0.833, y: 0.833 },
                                          s: [0],
                                          t: 123.000005009893
                                        }
                                      ],
                                      ix: 1
                                    },
                                    m: 1
                                  }
                                ],
                                ind: 3
                              },
                              {
                                ty: 4,
                                nm: "heart Outlines",
                                mn: "",
                                sr: 1,
                                st: 0,
                                op: 900.000036657751,
                                ip: 0,
                                hd: false,
                                cl: "",
                                ln: "",
                                ddd: 0,
                                bm: 0,
                                hasMask: true,
                                ao: 0,
                                ks: {
                                  a: { a: 0, k: [250, 250, 0], ix: 1 },
                                  s: {
                                    a: 1,
                                    k: [
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [36.8, 36.8, 100],
                                        t: 111
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [172.322, 172.322, 100],
                                        t: 125.000005091354
                                      }
                                    ],
                                    ix: 6
                                  },
                                  sk: { a: 0, k: 0 },
                                  p: {
                                    a: 1,
                                    k: [
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [-176, 324, 0],
                                        t: 0,
                                        ti: [-290.667, 33, 0],
                                        to: [180.667, 98.667, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [908, 916, 0],
                                        t: 10,
                                        ti: [-119.287, 159.889, 0],
                                        to: [128.303, -14.567, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [1391.533, 663.875, 0],
                                        t: 22,
                                        ti: [-4.841, 40.032, 0],
                                        to: [150.953, -202.333, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [1504, 240, 0],
                                        t: 34,
                                        ti: [171.765, -119.931, 0],
                                        to: [5.467, -45.211, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [1139.094, 212.92300000000003, 0],
                                        t: 46,
                                        ti: [74.938, -6.399, 0],
                                        to: [-100.511, 70.179, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [960, 486.00000000000006, 0],
                                        t: 58,
                                        ti: [99.173, 53.406, 0],
                                        to: [-75.183, 6.42, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [729.531, 175.733, 0],
                                        t: 69,
                                        ti: [4.827, -45.124, 0],
                                        to: [-168.601, -90.795, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [348, 336, 0],
                                        t: 83,
                                        ti: [-135.016, -153.154, 0],
                                        to: [-3.954, 36.96, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [500.192, 666.997, 0],
                                        t: 97,
                                        ti: [-45.522, -55.369, 0],
                                        to: [126.784, 143.816, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [914, 916, 0],
                                        t: 110,
                                        ti: [2.667, 1, 0],
                                        to: [94, 114.333, 0]
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [762, 618, 0],
                                        t: 123.000005009893
                                      }
                                    ],
                                    ix: 2
                                  },
                                  r: {
                                    a: 1,
                                    k: [
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [0],
                                        t: 0
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [5400],
                                        t: 111
                                      },
                                      {
                                        o: { x: 0.167, y: 0.167 },
                                        i: { x: 0.833, y: 0.833 },
                                        s: [5366.331],
                                        t: 126.000005132085
                                      }
                                    ],
                                    ix: 10
                                  },
                                  sa: { a: 0, k: 0 },
                                  o: { a: 0, k: 100, ix: 11 }
                                },
                                ef: [],
                                masksProperties: [
                                  {
                                    nm: "Mask 1",
                                    mn: "",
                                    inv: false,
                                    mode: "n",
                                    x: { a: 0, k: 0, ix: 4 },
                                    o: { a: 0, k: 100, ix: 3 },
                                    pt: {
                                      a: 0,
                                      k: {
                                        c: false,
                                        i: [[0, 0]],
                                        o: [[0, 0]],
                                        v: [[-4.335, 0.93]]
                                      },
                                      ix: 1
                                    }
                                  }
                                ],
                                shapes: [
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 1",
                                    ix: 1,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [0.373, 0],
                                              [0.549, 2.872],
                                              [0.296, 0.017],
                                              [-0.197, 3.307],
                                              [-3.297, -0.209],
                                              [-6.394, -33.475],
                                              [3.252, -0.621]
                                            ],
                                            o: [
                                              [-2.819, 0],
                                              [-6.262, -32.775],
                                              [-3.305, -0.198],
                                              [0.197, -3.308],
                                              [13.429, 0.8],
                                              [0.623, 3.251],
                                              [-0.381, 0.073]
                                            ],
                                            v: [
                                              [20.516, 25.982],
                                              [14.634, 21.11],
                                              [-21.21, -13.801],
                                              [-26.838, -20.144],
                                              [-20.496, -25.773],
                                              [26.412, 18.86],
                                              [21.649, 25.874]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: { a: 0, k: [1, 1, 1], ix: 4 },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [374.584, 136.062],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  },
                                  {
                                    ty: "gr",
                                    bm: 0,
                                    cl: "",
                                    ln: "",
                                    hd: false,
                                    mn: "ADBE Vector Group",
                                    nm: "Group 2",
                                    ix: 2,
                                    cix: 2,
                                    np: 2,
                                    it: [
                                      {
                                        ty: "sh",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Shape - Group",
                                        nm: "Path 1",
                                        ix: 1,
                                        d: 1,
                                        ks: {
                                          a: 0,
                                          k: {
                                            c: true,
                                            i: [
                                              [48.047, 0],
                                              [12.098, -33.499],
                                              [37.672, 0],
                                              [0, -48.044],
                                              [0, 0],
                                              [0, 123.274]
                                            ],
                                            o: [
                                              [-37.667, 0],
                                              [-12.093, -33.499],
                                              [-48.041, 0],
                                              [0, 123.274],
                                              [0, 0],
                                              [0, -48.044]
                                            ],
                                            v: [
                                              [81.837, -149.998],
                                              [-0.003, -92.552],
                                              [-81.836, -149.998],
                                              [-168.827, -63.006],
                                              [-0.003, 149.998],
                                              [168.826, -63.006]
                                            ]
                                          },
                                          ix: 2
                                        }
                                      },
                                      {
                                        ty: "fl",
                                        bm: 0,
                                        cl: "",
                                        ln: "",
                                        hd: false,
                                        mn: "ADBE Vector Graphic - Fill",
                                        nm: "Fill 1",
                                        c: {
                                          a: 0,
                                          k: [0.6745, 0.6, 0.1804],
                                          ix: 4
                                        },
                                        r: 1,
                                        o: { a: 0, k: 100, ix: 5 }
                                      },
                                      {
                                        ty: "tr",
                                        a: { a: 0, k: [0, 0], ix: 1 },
                                        s: { a: 0, k: [100, 100], ix: 3 },
                                        sk: { a: 0, k: 0, ix: 4 },
                                        p: {
                                          a: 0,
                                          k: [262.173, 232.462],
                                          ix: 2
                                        },
                                        r: { a: 0, k: 0, ix: 6 },
                                        sa: { a: 0, k: 0, ix: 5 },
                                        o: { a: 0, k: 100, ix: 7 }
                                      }
                                    ]
                                  }
                                ],
                                ind: 4
                              }
                            ],
                            ddd: 0,
                            h: 1080,
                            w: 1920,
                            meta: {
                              a: "",
                              k: "",
                              d: "",
                              g: "@lottiefiles/toolkit-js 0.22.1",
                              tc: "#000000"
                            },
                            v: "5.5.2",
                            fr: 30,
                            op: 180,
                            ip: 0,
                            assets: []
                          }}
                          className={classNames("__wab_instance", sty.lottie)}
                          preview={false}
                        />
                      </AntdModal>
                    )}
                  </DataCtxReader__>
                }
                method={"GET"}
                noLayout={false}
                previewErrorDisplay={false}
                previewSpinner={false}
                queryKey={``}
                url={`https://app.weddingspeechpro.io/version-test/api/1.1/wf/quotable?prompt=${$state.quoteRequest}`}
              >
                <DataCtxReader__>
                  {$ctx => (
                    <React.Fragment>
                      <div
                        data-plasmic-name={"quotes"}
                        data-plasmic-override={overrides.quotes}
                        className={classNames(projectcss.all, sty.quotes)}
                      >
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            sty.column___2I4El
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___8Qkwt
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return (
                                    "The Best Quotes About " +
                                    $state.quoteRequest
                                      .split(" ")
                                      .map(
                                        word =>
                                          word.charAt(0).toUpperCase() +
                                          word.slice(1)
                                      )
                                      .join(" ")
                                  );
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return "The Best Quotes about  ";
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </h2>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__lbxh1
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__fjY6Q
                            )}
                          >
                            <React.Fragment>
                              {(() => {
                                try {
                                  return $ctx.bubbleRequestAPI.response.found;
                                } catch (e) {
                                  if (
                                    e instanceof TypeError ||
                                    e?.plasmicType ===
                                      "PlasmicUndefinedDataError"
                                  ) {
                                    return '<div>\n    <h2>"Time you enjoy wasting is not wasted time."</h2>\n    <h3>Marthe Troly-Curtin</h3>\n    <h4>This quote can be used to emphasize the importance of relaxation and leisure in a balanced life, great for lifestyle or wellness blogs.</h4>\n</div>\n\n<div>\n    <h2>"We don\'t stop playing because we grow old; we grow old because we stop playing."</h2>\n    <h3>George Bernard Shaw</h3>\n    <h4>Ideal for content focusing on staying young at heart and the importance of play for all ages, suitable for motivational speaking or health and wellness websites.</h4>\n</div>\n\n<div>\n    <h2>"Even though you\'re growing up, you should never stop having fun."</h2>\n    <h3>Nina Dobrev</h3>\n    <h4>Perfect for addressing young adults or as advice in coming-of-age narratives, stressing the importance of maintaining a playful spirit.</h4>\n</div>\n\n<div>\n    <h2>"Fun is one of the most important \u2013 and underrated \u2013 ingredients in any successful venture."</h2>\n    <h3>Richard Branson</h3>\n    <h4>Useful for business and entrepreneurial contexts, emphasizing fun as a key component in successful ventures and startups.</h4>\n</div>\n\n<div>\n    <h2>"My philosophy is: If you can\'t have fun, there\'s no sense in doing it."</h2>\n    <h3>Paul Walker</h3>\n    <h4>Great for motivational content or articles encouraging readers to pursue careers and hobbies that bring them joy and fulfillment.</h4>\n</div>\n';
                                  }
                                  throw e;
                                }
                              })()}
                            </React.Fragment>
                          </div>
                        </div>
                      </div>
                      {(() => {
                        try {
                          return true;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return true;
                          }
                          throw e;
                        }
                      })() ? (
                        <section
                          data-plasmic-name={"upSell"}
                          data-plasmic-override={overrides.upSell}
                          className={classNames(projectcss.all, sty.upSell)}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__kNskJ
                            )}
                          >
                            {"Like Your Quote? You'll love our Speeches."}
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xsEWo
                            )}
                          >
                            <React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#000000", fontWeight: 700 }}
                              >
                                {" "}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#000000" }}
                              >
                                {
                                  "Wedding Speech Pro is an AI powered tool to supercharge you wedding speech. "
                                }
                              </span>
                              <React.Fragment>{"\n"}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#000000" }}
                              >
                                {
                                  "We'll help you get the right balance of hilarious and heartfelt. "
                                }
                              </span>
                              <React.Fragment>{"\n"}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#000000" }}
                              >
                                {"Cut through the noise. Get"}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-Bjjq_24AWhes)" }}
                              >
                                {" "}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              {
                                <span
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.span,
                                    projectcss.__wab_text,
                                    projectcss.plasmic_default__inline,
                                    sty.span__lfaU9
                                  )}
                                >
                                  <React.Fragment>
                                    <span
                                      className={
                                        "plasmic_default__all plasmic_default__span"
                                      }
                                      style={{
                                        color: "var(--token-HxnmpURJ0E1r)",
                                        fontWeight: 700
                                      }}
                                    >
                                      {"20% off"}
                                    </span>
                                  </React.Fragment>
                                </span>
                              }
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "var(--token-HxnmpURJ0E1r)" }}
                              >
                                {" "}
                              </span>
                              <React.Fragment>{""}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#000000" }}
                              >
                                {"your first speech."}
                              </span>
                              <React.Fragment>{"\n"}</React.Fragment>
                              <span
                                className={
                                  "plasmic_default__all plasmic_default__span"
                                }
                                style={{ color: "#000000" }}
                              >
                                {"Enter your Email Address below."}
                              </span>
                            </React.Fragment>
                          </div>
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rFVc
                            )}
                          >
                            <TextInput
                              data-plasmic-name={"submitEmailInput"}
                              data-plasmic-override={overrides.submitEmailInput}
                              className={classNames(
                                "__wab_instance",
                                sty.submitEmailInput
                              )}
                              name={"emailSignUpInput"}
                              onChange={(...eventArgs) => {
                                generateStateOnChangeProp($state, [
                                  "submitEmailInput",
                                  "value"
                                ])(
                                  (e => e.target?.value).apply(null, eventArgs)
                                );
                              }}
                              placeholder={"youremail@address.com"}
                              type={"email"}
                              value={
                                generateStateValueProp($state, [
                                  "submitEmailInput",
                                  "value"
                                ]) ?? ""
                              }
                            />

                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__k5PGr
                              )}
                              color={"red"}
                              onClick={async event => {
                                const $steps = {};

                                $steps["updateEmailSignUp"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        variable: {
                                          objRoot: $state,
                                          variablePath: ["emailSignUp"]
                                        },
                                        operation: 0,
                                        value: $state.submitEmailInput.value
                                      };
                                      return (({
                                        variable,
                                        value,
                                        startIndex,
                                        deleteCount
                                      }) => {
                                        if (!variable) {
                                          return;
                                        }
                                        const { objRoot, variablePath } =
                                          variable;

                                        $stateSet(objRoot, variablePath, value);
                                        return value;
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["updateEmailSignUp"] != null &&
                                  typeof $steps["updateEmailSignUp"] ===
                                    "object" &&
                                  typeof $steps["updateEmailSignUp"].then ===
                                    "function"
                                ) {
                                  $steps["updateEmailSignUp"] = await $steps[
                                    "updateEmailSignUp"
                                  ];
                                }

                                $steps["httpPost"] = true
                                  ? (() => {
                                      const actionArgs = {
                                        dataOp: {
                                          sourceId: "niq3oKjvkVXSxFTRYKxujM",
                                          opId: "36a82b84-1cfc-4aee-9bb2-26b1c722a130",
                                          userArgs: {
                                            body: [
                                              $state.emailSignUp,
                                              $ctx.bubbleRequestAPI.response
                                                .shortRef
                                            ]
                                          },
                                          cacheKey: null,
                                          invalidatedKeys: [
                                            "plasmic_refresh_all"
                                          ],
                                          roleId: null
                                        }
                                      };
                                      return (async ({
                                        dataOp,
                                        continueOnError
                                      }) => {
                                        try {
                                          const response =
                                            await executePlasmicDataOp(dataOp, {
                                              userAuthToken:
                                                dataSourcesCtx?.userAuthToken,
                                              user: dataSourcesCtx?.user
                                            });
                                          await plasmicInvalidate(
                                            dataOp.invalidatedKeys
                                          );
                                          return response;
                                        } catch (e) {
                                          if (!continueOnError) {
                                            throw e;
                                          }
                                          return e;
                                        }
                                      })?.apply(null, [actionArgs]);
                                    })()
                                  : undefined;
                                if (
                                  $steps["httpPost"] != null &&
                                  typeof $steps["httpPost"] === "object" &&
                                  typeof $steps["httpPost"].then === "function"
                                ) {
                                  $steps["httpPost"] = await $steps["httpPost"];
                                }
                              }}
                            >
                              {"Submit"}
                            </Button>
                          </div>
                        </section>
                      ) : null}
                    </React.Fragment>
                  )}
                </DataCtxReader__>
              </DataFetcher>
            ) : null}
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__cnsFg
              )}
            >
              {
                "People use quotes for a variety of reasons, across different contexts and settings. Here are some of the main reasons:\n\nAuthority and Credibility: Quotes from well-respected figures can lend credibility to an argument or point of view.\n\nEmotional Connection: Quotes often encapsulate powerful emotions and ideas, allowing speakers or writers to connect more deeply with their audience.\n\nConciseness: A well-chosen quote can express in a few words what might otherwise take many sentences to convey.\n\nInspiration and Motivation: Inspirational quotes can motivate people to take action, feel more confident, or adopt a positive mindset.\n\nClarification: Quotes can help to clarify or illuminate a particular idea or concept.\n\nCommon Ground: Using quotes can create a sense of shared understanding or common ground between the speaker/writer and the audience.\n\nMemorability: A poignant or well-articulated quote can be memorable, helping to ensure that the message or idea has a lasting impact.\n\nAuthority of Experience: Quotes from individuals who have experienced something firsthand can provide valuable insights and perspectives.\n\nRhetorical Impact: Quotes can be used as powerful rhetorical tools, adding weight and impact to an argument or point being made.\n\nCultural or Historical Connection: Quotes can connect a current situation, idea, or feeling to broader cultural or historical contexts.\n\nHumor: Funny quotes can add humor to a conversation, speech, or piece of writing, helping to engage the audience and lighten the mood.\n\nBuilding Arguments: Quotes from experts or authoritative sources can be used to build and strengthen arguments.\n\nExpressing Solidarity: Using a quote can express solidarity with a particular movement, cause, or group of people.\n\nProviding Evidence: In academic and other formal settings, quotes are used to provide evidence in support of a particular point or argument.\n\nHighlighting Values: Quotes can highlight and reflect the values or principles of the individual using them, or the values upheld by a group or organization.\n\nArtistic Expression: In literature and the arts, quotes are used for artistic expression and to create connections between different works.\n\nUsing quotes effectively requires choosing them carefully and making sure they genuinely support or enhance the message being conveyed."
              }
            </div>
          </section>
          {(() => {
            try {
              return $state.quoteRequest === "";
            } catch (e) {
              if (
                e instanceof TypeError ||
                e?.plasmicType === "PlasmicUndefinedDataError"
              ) {
                return true;
              }
              throw e;
            }
          })() ? (
            <section
              data-plasmic-name={"preFooter"}
              data-plasmic-override={overrides.preFooter}
              className={classNames(projectcss.all, sty.preFooter)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nc3C
                )}
              >
                {"Struggling With Your Wedding Speech?"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__w4IFj
                )}
              >
                {
                  "Wedding Speech Pro is an AI powered tool to supercharge you speech writing process.\nWe'll help you get the right balance of hilarious and heartfelt."
                }
              </div>
            </section>
          ) : null}
          <section
            data-plasmic-name={"preFooter2"}
            data-plasmic-override={overrides.preFooter2}
            className={classNames(projectcss.all, sty.preFooter2)}
          >
            <div className={classNames(projectcss.all, sty.columns__q3SuC)}>
              <div className={classNames(projectcss.all, sty.column__qpJ8C)}>
                {renderPlasmicSlot({
                  defaultContents: (
                    <SocialProof
                      className={classNames(
                        "__wab_instance",
                        sty.socialProof__ywtqX
                      )}
                    />
                  ),

                  value: args.children
                })}
              </div>
            </div>
          </section>
          <GlobalFooter
            data-plasmic-name={"globalFooter"}
            data-plasmic-override={overrides.globalFooter}
            className={classNames("__wab_instance", sty.globalFooter)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "globalHeader2",
    "section",
    "quoteRequestInput",
    "speechTypeInput",
    "books",
    "_public",
    "publicFigures",
    "proverbs",
    "movies",
    "quoteSection",
    "quoteApi",
    "modal",
    "lottie",
    "quotes",
    "upSell",
    "submitEmailInput",
    "preFooter",
    "preFooter2",
    "globalFooter"
  ],
  globalHeader2: ["globalHeader2"],
  section: [
    "section",
    "quoteRequestInput",
    "speechTypeInput",
    "books",
    "_public",
    "publicFigures",
    "proverbs",
    "movies"
  ],
  quoteRequestInput: ["quoteRequestInput"],
  speechTypeInput: ["speechTypeInput"],
  books: ["books"],
  _public: ["_public", "publicFigures"],
  publicFigures: ["publicFigures"],
  proverbs: ["proverbs"],
  movies: ["movies"],
  quoteSection: [
    "quoteSection",
    "quoteApi",
    "modal",
    "lottie",
    "quotes",
    "upSell",
    "submitEmailInput"
  ],
  quoteApi: [
    "quoteApi",
    "modal",
    "lottie",
    "quotes",
    "upSell",
    "submitEmailInput"
  ],
  modal: ["modal", "lottie"],
  lottie: ["lottie"],
  quotes: ["quotes"],
  upSell: ["upSell", "submitEmailInput"],
  submitEmailInput: ["submitEmailInput"],
  preFooter: ["preFooter"],
  preFooter2: ["preFooter2"],
  globalFooter: ["globalFooter"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  globalHeader2: typeof GlobalHeader2;
  section: "section";
  quoteRequestInput: typeof TextInput;
  speechTypeInput: typeof Select;
  books: "div";
  _public: "div";
  publicFigures: "div";
  proverbs: "div";
  movies: "div";
  quoteSection: "section";
  quoteApi: typeof DataFetcher;
  modal: typeof AntdModal;
  lottie: typeof LottieWrapper;
  quotes: "div";
  upSell: "section";
  submitEmailInput: typeof TextInput;
  preFooter: "section";
  preFooter2: "section";
  globalFooter: typeof GlobalFooter;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  Plasmic_2QuoteFinder__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: Plasmic_2QuoteFinder__VariantsArgs;
    args?: Plasmic_2QuoteFinder__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<Plasmic_2QuoteFinder__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      Plasmic_2QuoteFinder__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: Plasmic_2QuoteFinder__ArgProps,
          internalVariantPropNames: Plasmic_2QuoteFinder__VariantProps
        }),
      [props, nodeName]
    );
    return Plasmic_2QuoteFinder__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "Plasmic_2QuoteFinder";
  } else {
    func.displayName = `Plasmic_2QuoteFinder.${nodeName}`;
  }
  return func;
}

export const Plasmic_2QuoteFinder = Object.assign(
  // Top-level Plasmic_2QuoteFinder renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    globalHeader2: makeNodeComponent("globalHeader2"),
    section: makeNodeComponent("section"),
    quoteRequestInput: makeNodeComponent("quoteRequestInput"),
    speechTypeInput: makeNodeComponent("speechTypeInput"),
    books: makeNodeComponent("books"),
    _public: makeNodeComponent("_public"),
    publicFigures: makeNodeComponent("publicFigures"),
    proverbs: makeNodeComponent("proverbs"),
    movies: makeNodeComponent("movies"),
    quoteSection: makeNodeComponent("quoteSection"),
    quoteApi: makeNodeComponent("quoteApi"),
    modal: makeNodeComponent("modal"),
    lottie: makeNodeComponent("lottie"),
    quotes: makeNodeComponent("quotes"),
    upSell: makeNodeComponent("upSell"),
    submitEmailInput: makeNodeComponent("submitEmailInput"),
    preFooter: makeNodeComponent("preFooter"),
    preFooter2: makeNodeComponent("preFooter2"),
    globalFooter: makeNodeComponent("globalFooter"),

    // Metadata about props expected for Plasmic_2QuoteFinder
    internalVariantProps: Plasmic_2QuoteFinder__VariantProps,
    internalArgProps: Plasmic_2QuoteFinder__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "WSP | Quote Finder",
      description:
        "Stop reading endless lists. \nFind the best quotes, and exactly how to use them, with our Quote Finder ",
      ogImageSrc:
        "https://site-assets.plasmic.app/eb770fb69aaf7fb97e27c4975f86b18d.png",
      canonical: ""
    }
  }
);

export default Plasmic_2QuoteFinder;
/* prettier-ignore-end */
